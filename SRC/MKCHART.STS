PWB-GENERATED FILE: DO NOT MODIFY
[shared-]
	version=3
	pmark="C:\NF\SRC\chvalid.c" 157 8
	project="C:\NF\SRC\MKCHART.MAK"
	buildmode=3
[edit-]
	file="C:\NF\SRC\chvalid.c" 157 1 157 8
	srch=
	fSrchRe=0
	rpl=
	src=
	fRplRe=0
[pwb]
	screen=25 80
	winstyle=7
	wnd=R 4 3 24 80 0 0
	file="C:\NF\SRC\glmkchar.c" 72 55 81 59
	wnd=R 5 4 24 80 0 0
	file="C:\NF\SRC\GLstruct.h" 1 1 15 8
	wnd=R 6 5 24 80 0 0
	file="C:\NF\SRC\glclose.c" 96 1 110 1
	wnd=R 3 2 24 80 0 0
	file="<COMPILE>Build Results" 1 1 1 1
	wnd=r 16 0 24 80 0 0
	file="C:\NF\SRC\glmonsum.c" 299 1 302 1
	wnd=R 2 1 24 80 0 0
	file="<SEARCH>Search Results" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<PRINT>Print Results" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<RECORD>Record" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<CLIPBOARD>Clipboard" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<browse>Browser Output" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<pwbhelp>Help" 1 1 1 1
	wnd=c 0 0 0 0 0 0
[build]
    build: language "None"
    build: template "None" modified
    build: macro DEBUG "0"
    build: macro PWBRMAKE "pwbrmake"
    build: macro NMAKEBSC1 "set"
    build: macro NMAKEBSC2 "nmake"
    build: macro CC "cl"
    build: macro CFLAGS_G "/BATCH /FR$*.sbr"
    build: macro CFLAGS_D "/qc /Gi$(PROJ).mdt /Zr /Zi /Od"
    build: macro CFLAGS_R "/Ot"
    build: macro LLIBS_R ""
    build: macro LLIBS_D ""
    build: macro ASM "masm"
    build: macro AFLAGS_G "/Mx /T"
    build: macro AFLAGS_D "/Zi"
    build: macro AFLAGS_R ""
    build: macro LINKER "link"
    build: macro ILINK "ilink"
    build: macro LRF "echo > NUL"
    build: macro BIND "bind"
    build: macro RC "rc"
    build: macro IMPLIB "implib"
    build: macro LFLAGS_G "/NOI /BATCH"
    build: macro LFLAGS_D "/CO /INC /FAR /PACKC"
    build: macro LFLAGS_R "/EXE /FAR /PACKC"
    build: macro MAPFILE_D "NUL"
    build: macro MAPFILE_R "NUL"
    build: macro BRFLAGS " /o $(PROJ).bsc"
    build: macro CXXFLAGS_G " /FR$*.sbr"
    build: macro BSCMAKE "bscmake"
    build: macro SBRPACK "sbrpack"
    build: macro BROWSE "1"
    build: macro PACK_SBRS "1"
    build: all $(PROJ).exe
    build: target $(PROJ).bsc bscmake
    build: target $(PROJ).exe nmakebsc1 nmakebsc2 lrf link
    build: inference .c.obj cc_c_obj
    build: inference .c.sbr cc_c_sbr
    build: inference .asm.obj asm_asm_obj
    build: command pwbrmake "$(PWBRMAKE) @<<\n$(BRFLAGS) $(SBRS)\n<<"
    build: command nmakebsc1 "-$(NMAKEBSC1) MAKEFLAGS="
    build: command nmakebsc2 "-$(NMAKEBSC2) $(NMFLAGS) -f $(PROJFILE) $(PROJ).bsc"
    build: release command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_R) /Fo$@ $<"
    build: debug command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_D) /Fo$@ $<"
    build: release command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_R) /FR$@ $<"
    build: debug command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_D) /FR$@ $<"
    build: release command asm_asm_obj "$(ASM) $(AFLAGS_G) $(AFLAGS_R) $<, $@;"
    build: debug command asm_asm_obj "$(ASM) $(AFLAGS_G) $(AFLAGS_D) $<, $@;"
    build: release command lrf "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_R)\n$(LLIBS_G: = +^\n) +\n$(LLIBS_R: = +^\n) +\n$(LIBS: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_R);\n<<"
    build: debug command lrf "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_D)\n$(LLIBS_G: = +^\n) +\n$(LLIBS_D: = +^\n) +\n$(LIBS: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_D);\n<<"
    build: release command link "$(LINKER) @$(PROJ).lrf"
    build: debug command link "$(ILINK) -a -e \"$(LINKER) @$(PROJ).lrf\" $@"
    build: command run "$(PROJ).exe $(RUNFLAGS)"
    build: command debug "CV $(CVFLAGS) $(PROJ).exe $(RUNFLAGS)"
    build: command bscmake "$(BSCMAKE) @<<\n$(BRFLAGS) $(SBRS)\n<<"
    build: suffixes
    build: include dependencies
    build: include system
    build: include .rc "^[ \t]*rcinclude[ \t]+\\([^ \t]+\\)"
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\""
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" system
    build: include .rc "^\\:i\\:b\\{ICON\\!BITMAP\\!FONT\\!CURSOR\\}\\:b\\{LOADONCALL\\:b\\!PRELOAD\\:b\\!FIXED\\:b\\!MOVABLE\\:b\\!DISCARDABLE\\:b\\!\\}*\\(\\:p\\)"
    build: include .c "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .c "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .h "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .h "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .cxx "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .cxx "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .cpp "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .cpp "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .hxx "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .hxx "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .hpp "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .hpp "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .rc "^\\:i\\:bBITMAP\\:b\\(\\:p\\)"
    build: include .rc "^\\:i\\:bCURSOR\\:b\\(\\:p\\)"
    build: include .rc "^\\:i\\:bFONT\\:b\\(\\:p\\)"
    build: include .rc "^\\:i\\:bICON\\:b\\(\\:p\\)"
    build: include .c "^[ \t]*#[ \t]*include[ \t]*\"\\([^\"]+\\)\"" case
    build: include .c "^[ \t]*#[ \t]*include[ \t]*<\\([^>]+\\)>" case system
    build: include .h "^[ \t]*#[ \t]*include[ \t]*\"\\([^\"]+\\)\"" case
    build: include .h "^[ \t]*#[ \t]*include[ \t]*<\\([^>]+\\)>" case system
    build: include .asm "^[ \t]*include[ \t]+\\([^ \t]+\\)"
    build: include .inc "^[ \t]*include[ \t]+\\([^ \t]+\\)"
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*\"\\([^\"]+\\)\""
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*<\\([^>]+\\)>" system
    build: message "^SYS[0-9][0-9][0-9][0-9]:\\:b"
    build: message "^NET[0-9][0-9][0-9][0-9]:\\:b"
    build: message "^\\(\\{\\:p\\!<[^>]*>\\}\\) \\([0-9]+\\) \\([0-9]+\\)[ ]*:" file line col
    build: message "^\\(\\:p\\):\\([0-9]+\\):" file line
    build: message "^[^(]+(\\(\\:p\\)) : error L[0-9]+[ ]*: '_*\\([^']+\\)' : unresolved external" file token
    build: message "^[^(]+(\\(\\:p\\)) : [^L]+L[124]" file
    build: message "^LINK [^L]+L[124]"
    build: message "^ILINK : [^L]+L[124]"
    build: message "^\\(\\:p\\)(\\(\\:z\\))[ ]*: [^U]+U[124]" file line
    build: message "^NMAKE : [^U]+U[124]"
    build: message "^\\:p : [^U]+U[124]\\:d\\:d\\:d"
    build: message "^bscmake: [^B]+BK[124]"
    build: message "^sbrpack: [^S]+SB[124]"
    build: message "^BIND : [^U]+U[124]"
    build: message "^\\(\\:p\\)(\\(\\:z\\)) RC:" file line
    build: message "\\(\\:p\\)(\\(\\:z\\)) : error RC\\:z:" file line
    build: message "^RC:"
    build: message "^RC :"
    build: message "^LIB :"
    build: message "^MPC :"
    build: message "^CVPACK :"
    build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^C]+C[124]" file line
    build: message "^[^C]+C[124][0-9]+: "
    build: message "^[^D]+D[124][0-9]+ : "
    build: message "Build all" file line
    build: message "Rebuild all" file line
    build: message "Compile je.cpp" file line
    build: message "Compile GLT.CPP" file line
    build: message "Compile glt.cpp" file line
    build: message "Compile amt.CPP" file line
    build: message "Compile mmdd.CPP" file line
    build: message "Compile ACCT.CPP" file line
    build: message "Compile CHART.CPP" file line
    build: message "Compile chart.cpp" file line
    build: message "Compile ANNUITY1.C" file line
    build: message "^pwbrmake: [^U]+U[124]"
    build: message "^\\(\\:p\\)(\\([0-9]+\\))[ \t]*:[ \t]*[^A]+A[12456]" file line
